var f=Object.defineProperty;var v=(r,e,t)=>e in r?f(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var s=(r,e,t)=>(v(r,typeof e!="symbol"?e+"":e,t),t);import{s as L,_ as E}from"./plugin-vue_export-helper.0377b147.js";import{h as y,t as I,R as p,E as P,a as S,O as x,d as g,D as R,W as T,S as O,C,B as j,r as B,b as D,U as k,c as h,e as A,o as _,f as w,g as c,i as m,F as b,j as G,k as V}from"./vendor.516336ea.js";class W{constructor(e=y(),t,o){s(this,"timestamp");s(this,"traceId");s(this,"spanId");s(this,"resource");s(this,"attributes",{});this.timestamp=I(e)}setAttribute(e,t){this.attributes[e]=t}}class H{constructor(e,t){s(this,"logRecord");s(this,"instrumentationLibrary");this.logRecord=e,this.instrumentationLibrary=t,this.logRecord=e,this.instrumentationLibrary=t}}class F{constructor(e,t,o){s(this,"resource");s(this,"instrumentationLibrary");s(this,"provider");this.resource=e,this.instrumentationLibrary=t,this.provider=o}emit(e){const t=new H(e,this.instrumentationLibrary);this.provider.processors.forEach(o=>{o.emit(t)})}flush(){throw new Error("not implemented")}}const N=typeof globalThis=="object"?globalThis:typeof self=="object"?self:typeof window=="object"?window:typeof global=="object"?global:{},i=Symbol.for("io.opentelemetry.js.api.logs"),a=N,u=class{constructor(){}static getInstance(){return this._instance||(this._instance=new u),this._instance}setGlobalLogEmitterProvider(e){return a[i]?a[i]:(a[i]=e,e)}getLogEmitterProvider(){var e;return(e=a[i])!=null?e:NOOP_LOG_EMITTER_PROVIDER}getLogEmitter(){}};let l=u;s(l,"_instance");const U=l.getInstance();class q{constructor(e={}){s(this,"processors",[]);s(this,"resource");this.resource=e.resource||p.empty(),this.resource=p.default().merge(this.resource)}getLogEmitter(e,t){return new F(this.resource,this.instrumentationLibrary,this)}addLogProcessor(e){this.processors.push(e)}register(){U.setGlobalLogEmitterProvider(this)}}class M{constructor(e){this.exporter=e}emit(e){this.exporter.export([e])}shutdown(){}forceFlush(){}}class ${export(e,t){for(const o of e)console.log(this._exportInfo(o));if(t)return t({code:P.SUCCESS})}shutdown(){return this._sendSpans([]),Promise.resolve()}_exportInfo(e){return{traceId:e.logRecord.traceId,spanId:e.logRecord.parentSpanId,timestamp:S(e.logRecord.timestamp),attributes:e.logRecord.attributes}}}class K extends x{send(e,t,o){if(this._isShutdown){g.debug("Shutdown already started. Cannot send objects");return}const n=this.convert(e);L(n),t()}}class Y{static init(){g.setLogger(new R);const e=new T;e.addSpanProcessor(new O(new C)),e.addSpanProcessor(new j(new K)),e.register();const t=new M(new $),o=new q;o.addLogProcessor(t),o.register();const n=o.getLogEmitter(),d=new W;d.setAttribute("event.name","click"),n.emit(d),B({instrumentations:[new D,new k]})}}Y.init();const z=h({props:{msg:null},setup(r){const e=A(0);return(t,o)=>(_(),w(b,null,[c("h1",null,m(r.msg),1),c("button",{type:"button",onClick:o[0]||(o[0]=n=>e.value++)},"count is: "+m(e.value),1)],64))}});var J=E(z,[["__scopeId","data-v-08eefdf5"]]);const Q=h({setup(r){function e(){window.open("./viewer/","otel-viewer","width=960,height=720")}return(t,o)=>(_(),w(b,null,[c("div",{class:"viewer-container"},[c("button",{onClick:e},"Open Viewer")]),G(J,{msg:"Hello World"})],64))}});V(Q).mount("#app");
